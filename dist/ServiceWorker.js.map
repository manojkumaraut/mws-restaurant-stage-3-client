{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/ServiceWorker.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","catch","error","console","log","respondWith","match","request","response","fetch","fetchResponse","url","indexOf","put","clone","includes","Response","status","statusText","keys","cacheNames","Promise","all","filter","cacheName","startsWith","map","delete"],"mappings":"CAAA,WAAA,OAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,GAAA,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,GCMAK,KAAKC,iBAAiB,UAAWC,IAC/BA,EAAMC,UACJC,OAAOC,KARc,yBASlBC,KAAKC,GACGA,EAAMC,OAAO,CAClB,cACA,kBACA,4BACA,kBACA,+BACA,cACA,yBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACCC,MAAMC,IACPC,QAAQC,IAAI,uBAAyBF,SAU/CV,KAAKC,iBAAiB,QAASC,IAC3BA,EAAMW,YACJT,OAAOU,MAAMZ,EAAMa,SAAST,KAAKU,GACxBA,GAAYC,MAAMf,EAAMa,SAAST,KAAKY,GAClCd,OAAOC,KA7CD,yBA6CuBC,KAAKC,IACI,IAAtCL,EAAMa,QAAQI,IAAIC,QAAQ,SACzBb,EAAMc,IAAInB,EAAMa,QAASG,EAAcI,SAEtCJ,MAGZT,MAAMC,GACHR,EAAMa,QAAQI,IAAII,SAAS,QACpBnB,OAAOU,MAAM,uBAEf,IAAIU,SAAS,gCAAiC,CACnDC,OAAQ,IACRC,WAAY,sCAWtB1B,KAAKC,iBAAiB,WAAYC,IAChCA,EAAMC,UACHC,OAAOuB,OAAOrB,KAAKsB,GACXC,QAAQC,IACbF,EAAWG,OAAOC,GACTA,EAAUC,WAAW,uBA1Ef,0BA0EwCD,GACpDE,IAAIF,GACE5B,OAAO+B,OAAOH","file":"ServiceWorker.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()"," const staticCacheName = 'restaurant-static-003';\r\n\r\n/**\r\n *   Install and Caching of Asset\r\n */\r\n\r\nself.addEventListener('install', event => {    \r\n  event.waitUntil(\r\n    caches.open(staticCacheName)\r\n      .then(cache => {\r\n        return cache.addAll([\r\n          '/index.html',\r\n          '/css/styles.css',\r\n          '/css/font-awesome.min.css',\r\n          '/js/dbhelper.js',\r\n          '/js/registerServiceWorker.js',\r\n          '/js/main.js',\r\n          '/js/restaurant_info.js',\r\n          '/data/restaurants.json',\r\n          '/restaurant.html?id=1',\r\n          '/restaurant.html?id=2',\r\n          '/restaurant.html?id=3',\r\n          '/restaurant.html?id=4',\r\n          '/restaurant.html?id=5',\r\n          '/restaurant.html?id=6',\r\n          '/restaurant.html?id=7',\r\n          '/restaurant.html?id=8',\r\n          '/restaurant.html?id=9',\r\n          '/restaurant.html?id=10',\r\n          '/img/appoffline.png'\r\n        ]).catch(error => {\r\n          console.log('Caches open failed: ' + error);\r\n        });\r\n      })\r\n  );\r\n});\r\n\r\n/**\r\n *   Fetch event and Offline Caching \r\n */\r\n\r\nself.addEventListener('fetch', event => {\r\n    event.respondWith(\r\n      caches.match(event.request).then(response => {\r\n        return response || fetch(event.request).then(fetchResponse => {\r\n            return caches.open(staticCacheName).then(cache => {\r\n                if(event.request.url.indexOf('http') === 0){\r\n                    cache.put(event.request, fetchResponse.clone());\r\n                }\r\n              return fetchResponse;\r\n            });\r\n          });\r\n      }).catch(error => {\r\n        if (event.request.url.includes('.jpg')) {\r\n            return caches.match('/img/appoffline.png');\r\n          }\r\n          return new Response('Not connected to the internet', {\r\n            status: 404,\r\n            statusText: \"Not connected to the internet\"\r\n          });\r\n        console.log(error, 'no cache entry for:', event.request.url);\r\n      })\r\n    );\r\n  });\r\n\r\n/**\r\n *   Static Cache Clear\r\n */\r\n\r\n  self.addEventListener('activate', event => {\r\n    event.waitUntil(\r\n       caches.keys().then(cacheNames => {\r\n        return Promise.all(\r\n          cacheNames.filter(cacheName => {\r\n            return cacheName.startsWith('restaurant-static-') && cacheName !== staticCacheName;\r\n          }).map(cacheName => {\r\n            return caches.delete(cacheName);\r\n          })\r\n        );\r\n      })\r\n    );\r\n  });\r\n"]}